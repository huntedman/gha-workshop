name: GH Workshop demo

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  run-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: keyboardcat
          POSTGRES_DB: tasks
        options: >-
          --health-cmd pg_isready
          --health-interval 3s
          --health-timeout 15s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: "actions/checkout@v3"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run test
        run: |
          python -m unittest discover -s tests -p 'test_*.py'

  build-and-push:
    needs: run-test
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"
    steps:
      - uses: "actions/checkout@v3"
        name: "Checkout code"
      - name: "Authenticate to docker"
        uses: "docker/login-action@v2"
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "Extract metadata"
        id: metadata
        uses: "docker/metadata-action@v3"
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: "Build and push"
        uses: "docker/build-push-action@v4"
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  notify-slack:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: "Notify slack"
        uses: "slackapi/slack-github-action@v1.24.0"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          channel-id: "C05T5LEMWCQ"
          payload: |
            {
              "text": "User ${{ github.actor }} pushed to ${{ github.ref }} of ${{ github.repository }}. Image is available at ghcr.io/${{ github.repository }}" 
            }
